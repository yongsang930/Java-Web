****오늘 할 내용****
Thread 개념 
Thread 생성방법
Thread 구동방식
Thread 우선순위
Thread 제어
Thread 동기화(synchronized)
Network


****Thread 개념****
process : 현재 실행 중인 프로그램, multi-processing
thread : 프로세스 내부의 세부적 실행단위, multi-threading
ex) 곰플레이어 프로세스 내부의 세부적 실행단위(thread)
		1. 영상 처리 스레드 2. 음향 처리 스레드 3. 자막 처리 스레드가
		멀티 스레딩 되어 동시에 수행되어야 동영상이 재생이 가능하다.

****스레드 생성방법****
1. java.lang.Thread class를 상속 받고 run() 메서드를 오버라이딩
2.java.lang.Runnable interface를 implements 하고 run() 메서드를 오버라이딩

 2.번이 낫다. 왜냐하면 상속은 단일상속이라 다른것을 상속받지 못하므로
 인터페이스는 다중상속이라 나중에 유지보수시 유리하다.
 
 ****스레드 구동방식****
 start() ------- 스레드 스케줄러 ----- run()
 개발자는 start()를 실행시키고 스레드 스케줄러가 스케줄링 하면
 run() 메서드가 수행된다.
 
 ****스레드 스케줄링 방식****
 1. 시분할 방식, 2. 우선순위 방식
 자바는 2 우선순위 방식을 채택한다.
 우선순위를 명시하지 않으면 5 , 가장 낮은 1 ~ 가장 높은 10 순위로 구성
 우선순위가 높으면 상대적으로 스케줄링 받을 가능성이 높다.
 
 ****스레드 제어****
 Tread.sleep(1000);  =>1초동안 대기하다 다시 수행
  									  일정 시간 블럭시켜 놓고 다시 수행 재개
  join() =>현재 스레드 수행 완료시까지 다른 스레드 수행 대기
 
 ****Thread 동기화(synchronized)****
 Thread -> data 공유하는 장점 -> 이 경우 공유 데이터를 제어하는 데 있어서
 다수의 스레드가 수행될 때 문제 발생 소지가 있다.
 
 why? 멀티 스레딩시 공유 데이터의 안정성을 보장하기 위해 사용
 how? 1) 메서드에 synchronized 제어자를 명시
 			  이 경우 메서드 전체가 단일 스레드 환경이 된다.
 		 2) 메서드 구현부 중 일 부분에 synchronized block을 지정한다.
 		 	 이 경우 지정한 부분만 단일 스레드 환경이 된다.
 
****Network****
TCP/IP 프로토콜 기반의 네트워킹 프로그램

java.net 패키지
Socket : input, output Stream을 가지고 있는 네트워 통신의 주체

서버
ServerSocket(port) : 대표전화 (접수)
serverSocket.accept() : 대기하다가 client가 접속하면 일반 Socket을 반환
일반 Socket : 일반 전화 (실제 client와 통신)
						socket.getOutputStream() : 클라이언트에게 데이터 전송
						socket.getInputStream() : 클라이언트로부터 데이터 입력
close();

클라이언트
Socket(ip,port) : 서버 ip , 서비스 port 명시
socket.getInputStream() : 서버로부터 데이터를 입력
socket.getOutputStream() :서버에 데이터를 전송						   




